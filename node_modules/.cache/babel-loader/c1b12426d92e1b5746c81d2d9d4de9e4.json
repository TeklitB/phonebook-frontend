{"ast":null,"code":"var _jsxFileName = \"/home/techb/Full-stack-open-2020/part2/phonebook/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport SinglePerson from './components/SinglePerson';\nimport bookServices from './services/book';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [searchName, setSearchName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    bookServices.getAll().then(initialNotes => {\n      setPersons(initialNotes);\n    });\n  }, []);\n\n  const addName = event => {\n    event.preventDefault();\n    const found = persons.find(person => person.name === newName);\n    const foundPerson = persons.find(person => person.name === newName);\n\n    if (found) {\n      const id = foundPerson.id;\n\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const changeNumber = { ...foundPerson,\n          number: newNumber\n        };\n        bookServices.update(id, changeNumber).then(retNumber => {\n          setPersons(persons.map(person => person.name !== newName ? person : retNumber));\n          setNewName('');\n          setNewNumber('');\n        }).catch(error => {\n          alert('Unable to update number.');\n        });\n      }\n    } else {\n      const nameObject = {\n        name: newName,\n        number: newNumber\n      };\n      bookServices.create(nameObject).then(returnedName => {\n        setPersons(persons.concat(returnedName));\n        setNewName('');\n        setNewNumber('');\n      }).catch(error => {\n        setErrorMessage(`Added '${newName}' `);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleNewName = event => {\n    //console.log(event.target.value)\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = event => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value);\n  };\n\n  const deleteContact = id => {\n    const deletePerson = persons.find(n => n.id === id);\n\n    if (window.confirm(`Delete '${deletePerson.name}'?`)) {\n      bookServices.deleteP(id).then(returnedPerson => {\n        setPersons(persons.filter(person => person.id !== id)); //console.log(returnedPerson)\n      }).catch(error => {\n        alert(` '${deletePerson.name}' was already deleted`);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(Notification, {\n    message: errorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Filter, {\n    searchName: searchName,\n    setSearchName: setSearchName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SinglePerson, {\n    searchName: searchName,\n    persons: persons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    newName: newName,\n    handleNewName: handleNewName,\n    newNumber: newNumber,\n    handleNewNumber: handleNewNumber,\n    addName: addName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Numbers\"), persons.map(person => /*#__PURE__*/React.createElement(Persons, {\n    key: person.name,\n    person: person,\n    deleteContact: () => deleteContact(person.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 36\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/techb/Full-stack-open-2020/part2/phonebook/src/App.js"],"names":["React","useState","useEffect","Persons","Filter","PersonForm","SinglePerson","bookServices","Notification","App","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","errorMessage","setErrorMessage","getAll","then","initialNotes","addName","event","preventDefault","found","find","person","name","foundPerson","id","window","confirm","changeNumber","number","update","retNumber","map","catch","error","alert","nameObject","create","returnedName","concat","setTimeout","handleNewName","target","value","handleNewNumber","deleteContact","deletePerson","n","deleteP","returnedPerson","filter"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport SinglePerson from './components/SinglePerson'\nimport bookServices from './services/book'\nimport Notification from './components/Notification'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [searchName, setSearchName] = useState('')\n    const [errorMessage, setErrorMessage] = useState('')\n\n    useEffect(() => {\n        bookServices\n            .getAll()\n            .then(initialNotes => {\n                setPersons(initialNotes)\n            })\n    }, [])\n\n    const addName = (event) => {\n        event.preventDefault();\n\n        const found = persons.find(person => person.name === newName)\n        const foundPerson = persons.find(person => person.name === newName)\n\n        if (found) {\n            const id = foundPerson.id\n            if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n                const changeNumber = { ...foundPerson, number: newNumber }\n                bookServices\n                    .update(id, changeNumber)\n                    .then(retNumber => {\n                        setPersons(persons.map(person => person.name !== newName ? person : retNumber))\n                        setNewName('')\n                        setNewNumber('')\n                    })\n                    .catch(error => {\n                        alert('Unable to update number.')\n                    })\n            }\n\n        } else {\n            const nameObject = {\n                name: newName,\n                number: newNumber\n            }\n            bookServices\n                .create(nameObject)\n                .then(returnedName => {\n                    setPersons(persons.concat(returnedName))\n                    setNewName('')\n                    setNewNumber('')\n                })\n                .catch(error => {\n                    setErrorMessage(\n                        `Added '${newName}' `\n                    )\n                    setTimeout(() => {\n                        setErrorMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n    const handleNewName = (event) => {\n        //console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNewNumber = (event) => {\n        //console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const deleteContact = id => {\n        const deletePerson = persons.find(n => n.id === id)\n\n        if (window.confirm(`Delete '${deletePerson.name}'?`)) {\n            bookServices\n                .deleteP(id)\n                .then(returnedPerson => {\n                    setPersons(persons.filter(person => person.id !== id))\n                    //console.log(returnedPerson)\n                })\n                .catch(error => {\n                    alert(\n                        ` '${deletePerson.name}' was already deleted`\n                    )\n                })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={errorMessage} />\n            <Filter searchName={searchName} setSearchName={setSearchName} />\n            <SinglePerson searchName={searchName} persons={persons} />\n            <h2>Add a new</h2>\n            <PersonForm newName={newName} handleNewName={handleNewName}\n                newNumber={newNumber} handleNewNumber={handleNewNumber}\n                addName={addName}\n            />\n            <h2>Numbers</h2>\n            {persons.map(person => <Persons key={person.name} person={person}\n                deleteContact={() => deleteContact(person.id)} />\n            )}\n        </div>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}